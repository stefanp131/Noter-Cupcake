// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Noter.DAL.Context;

namespace Noter.DAL.Migrations
{
    [DbContext(typeof(NoterContext))]
    [Migration("20190909114615_FixForeignKeyForNote")]
    partial class FixForeignKeyForNote
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Noter.DAL.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedById");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.Property<Guid?>("TopicId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("TopicId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Noter.DAL.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedById");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Noter.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Noter.DAL.Entities.Note", b =>
                {
                    b.HasOne("Noter.DAL.Entities.User", "CreatedBy")
                        .WithMany("Notes")
                        .HasForeignKey("CreatedById");

                    b.HasOne("Noter.DAL.Entities.Topic", "Topic")
                        .WithMany("Notes")
                        .HasForeignKey("TopicId");
                });

            modelBuilder.Entity("Noter.DAL.Entities.Topic", b =>
                {
                    b.HasOne("Noter.DAL.Entities.User", "CreatedBy")
                        .WithMany("Topics")
                        .HasForeignKey("CreatedById");
                });
#pragma warning restore 612, 618
        }
    }
}
